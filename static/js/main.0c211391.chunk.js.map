{"version":3,"sources":["styles/Story.module.css","styles/AnimationContainer.module.css","utils/selectFields.js","services/hnApi.js","components/Story.js","containers/AnimationContainer.js","containers/StoriesContainer.js","containers/HeadingContainer.js","App.js","index.js"],"names":["module","exports","selectFields","id","by","url","time","title","baseUrl","newStoriesUrl","storyUrl","getStory","storyId","a","axios","get","then","data","result","getStoryIds","Story","useState","story","setStory","useEffect","target","href","className","styles","tile","AnimationContainer","skchase","skchasedot","StoriesContainer","storyIds","setStoryIds","elementNo","setElementNo","hasMore","setHasMore","dataLength","next","loader","endMessage","style","textAlign","map","index","HeadingContainer","color","padding","borderBottom","fontSize","backgroundColor","App","ReactDOM","render","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,KAAO,sB,kBCAzBD,EAAOC,QAAU,CAAC,QAAU,oCAAoC,WAAW,qCAAqC,WAAa,uCAAuC,eAAe,yCAAyC,sBAAsB,kD,iHCDrOC,EAAe,wEAAgC,GAA7BC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,IAAKC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,MAAtB,MAAwC,CAChEJ,KACAC,KACAC,MACAC,OACAC,UCFSC,EAAU,yCACVC,EAAa,UAAMD,EAAN,mBACbE,EAAQ,UAAMF,EAAN,SAERG,EAAQ,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACCC,IAChBC,IADgB,UACTL,EAAWE,EADF,UAEhBI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcA,GAAQf,EAAae,MAHzB,cACdC,EADc,yBAKbA,GALa,2CAAH,sDASRC,EAAW,uCAAG,4BAAAN,EAAA,sEACFC,IAAMC,IAAIN,GAC1BO,MAAK,qBAAGC,QAFU,cACjBC,EADiB,yBAIhBA,GAJgB,2CAAH,qD,gCCVXE,EAAQ,SAAC,GAAiB,IAAfR,EAAc,EAAdA,QAAc,EAERS,mBAAS,IAFD,mBAE3BC,EAF2B,KAEpBC,EAFoB,KAQlC,OAJAC,qBAAU,WACNb,EAASC,GAASI,MAAK,SAAAC,GAAI,OAAIA,GAAQA,EAAKZ,KAAOkB,EAASN,QAC7D,IAEIK,GAASA,EAAMjB,IAClB,mCACI,mBAAGoB,OAAO,SAASC,KAAMJ,EAAMjB,IAA/B,SACI,sBAAKsB,UAAWC,IAAOC,KAAvB,UACI,4BAAIP,EAAMf,QADd,QAEMe,EAAMlB,UAIpB,M,gBCrBK0B,EAAqB,WAC9B,OACI,sBAAKH,UAAWC,IAAOG,QAAvB,UACI,qBAAKJ,UAAWC,IAAOI,aACvB,qBAAKL,UAAWC,IAAOI,aACvB,qBAAKL,UAAWC,IAAOI,aACvB,qBAAKL,UAAWC,IAAOI,aACvB,qBAAKL,UAAWC,IAAOI,aACvB,qBAAKL,UAAWC,IAAOI,iBCgCpBC,MApCf,WAA4B,MAEQZ,mBAAS,IAFjB,mBAEjBa,EAFiB,KAEPC,EAFO,OAGUd,mBAAS,IAHnB,mBAGjBe,EAHiB,KAGNC,EAHM,OAIMhB,oBAAS,GAJf,mBAIjBiB,EAJiB,KAIRC,EAJQ,KAoBxB,OANAf,qBAAU,WAENL,IAAcH,MAAK,SAAAC,GAAI,OAAIkB,EAAYlB,QACxC,IAIC,cAAC,IAAD,CACIuB,WAAYJ,EACZK,KAhBa,WACC,MAAdL,GACAG,GAAW,GAEfF,EAAaD,EAAY,KAarBE,QAASA,EACTI,OAAQZ,EACRa,WACI,mBAAGC,MAAO,CAAEC,UAAW,UAAvB,SACI,qDAPZ,SAWKX,EAASY,KAAI,SAAClC,EAASmC,GAAV,OAAqBA,EAAQ,EAAIX,EAAa,cAAC,EAAD,CAAqBxB,QAASA,GAAlBA,GAAgC,WCpCrG,SAASoC,IAEpB,OACI,qBAAKJ,MAFU,CAAEC,UAAW,SAAUI,MAAO,QAASC,QAAS,SAAUC,aAAc,kBAAmBC,SAAU,OAAQC,gBAAiB,mBAE7I,SACI,iDCOGC,MATf,WACE,OACE,gCACE,cAACN,EAAD,IACA,cAAC,EAAD,QCJNO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0c211391.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tile\":\"Story_tile__2NQvO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skchase\":\"AnimationContainer_skchase__Y5jWg\",\"sk-chase\":\"AnimationContainer_sk-chase__1igEB\",\"skchasedot\":\"AnimationContainer_skchasedot__zDwhu\",\"sk-chase-dot\":\"AnimationContainer_sk-chase-dot__1HrGv\",\"sk-chase-dot-before\":\"AnimationContainer_sk-chase-dot-before__3dEKC\"};","export const selectFields = ({ id, by, url, time, title } = {}) => ({\r\n    id,\r\n    by,\r\n    url,\r\n    time,\r\n    title,\r\n})","import axios from 'axios';\r\nimport { selectFields } from '../utils/selectFields'\r\n\r\nexport const baseUrl = 'https://hacker-news.firebaseio.com/v0/';\r\nexport const newStoriesUrl = `${baseUrl}newstories.json`;\r\nexport const storyUrl = `${baseUrl}item/`;\r\n\r\nexport const getStory = async storyId => {\r\n    const result = await axios\r\n        .get(`${storyUrl + storyId}.json`)\r\n        .then(({ data }) => data && selectFields(data));\r\n\r\n    return result;\r\n}\r\n\r\n\r\nexport const getStoryIds = async () => {\r\n    const result = await axios.get(newStoriesUrl)\r\n        .then(({ data }) => data);\r\n\r\n    return result;\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { getStory } from '../services/hnApi'\r\nimport styles from '../styles/Story.module.css'\r\n\r\n\r\n\r\nexport const Story = ({ storyId }) => {\r\n\r\n    const [story, setStory] = useState({})\r\n\r\n    useEffect(() => {\r\n        getStory(storyId).then(data => data && data.url && setStory(data))\r\n    }, [])\r\n\r\n    return story && story.url ? (\r\n        <>\r\n            <a target='_blank' href={story.url}>\r\n                <div className={styles.tile}>\r\n                    <p>{story.title}</p>\r\n                By : {story.by}\r\n                </div>\r\n            </a>\r\n        </>\r\n    ) : null\r\n}\r\n","import styles from '../styles/AnimationContainer.module.css'\r\n\r\nexport const AnimationContainer = () => {\r\n    return (\r\n        <div className={styles.skchase}>\r\n            <div className={styles.skchasedot}></div>\r\n            <div className={styles.skchasedot}></div>\r\n            <div className={styles.skchasedot}></div>\r\n            <div className={styles.skchasedot}></div>\r\n            <div className={styles.skchasedot}></div>\r\n            <div className={styles.skchasedot}></div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { getStoryIds } from '../services/hnApi'\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { Story } from '../components/Story'\r\nimport { AnimationContainer } from './AnimationContainer'\r\n\r\nfunction StoriesContainer() {\r\n    //[] for initialsing variable to empty array\r\n    const [storyIds, setStoryIds] = useState([]);\r\n    const [elementNo, setElementNo] = useState(20);\r\n    const [hasMore, setHasMore] = useState(true);\r\n    // const [isIntersecting, setIsIntersecting] = useState(false);\r\n\r\n    const loadMoreData = () => {\r\n        if (elementNo === 500) {\r\n            setHasMore(false);\r\n        }\r\n        setElementNo(elementNo + 20);\r\n    }\r\n\r\n    useEffect(() => {\r\n        // get story Ids\r\n        getStoryIds().then(data => setStoryIds(data))\r\n    }, [])\r\n    //[] so that can run once, can provide any variable to change when value changes\r\n\r\n    return (\r\n        <InfiniteScroll\r\n            dataLength={elementNo}\r\n            next={loadMoreData}\r\n            hasMore={hasMore}\r\n            loader={AnimationContainer}\r\n            endMessage={\r\n                <p style={{ textAlign: \"center\" }}>\r\n                    <b>Yupp!! That's it!!</b>\r\n                </p>\r\n            }\r\n        >\r\n            {storyIds.map((storyId, index) => (index + 1 < elementNo) ? <Story key={storyId} storyId={storyId} /> : null)}\r\n        </InfiniteScroll>\r\n    )\r\n}\r\nexport default StoriesContainer","import React from 'react'\r\n\r\nexport default function HeadingContainer() {\r\n    let styleWrapper = { textAlign: 'center', color: 'white', padding: '16px 0', borderBottom: '2px solid white', fontSize: '40px', backgroundColor: 'rgb(15, 37, 77)', }\r\n    return (\r\n        <div style={styleWrapper}>\r\n            <span>HACKER NEWS</span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\nimport StoriesContainer from './containers/StoriesContainer'\nimport HeadingContainer from \"./containers/HeadingContainer\";\n\nfunction App() {\n  return (\n    <div>\n      <HeadingContainer />\n      <StoriesContainer />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom'\n\nimport App from './App';\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}